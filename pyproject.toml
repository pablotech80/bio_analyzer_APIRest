# Build, define las herremientas necesarias para gestionar,
# usamos setuptools para la construccion y el empaquetado del proyecto.

[build-system]
requires = ["setuptools~=72.1.0", "setuptools-scm~=7.1.0", "wheel~=0.44.0"]
build-backend = "setuptools.build_meta"

# project define todas las caracteristicas del proyecto

[project]
name = "body_analyzer"
version = "0.1.0"
dynamic = ["readme"]
authors = [
    { name = "©2024 Pablo Techera", email = "ptecherasosa@icloud.com" },
]
description = "Development of a REST API for body composition analysis."
requires-python = ">=3.11"
keywords = ["body composition", "health", "calculator", "REST API", "Python", "body analysis"]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License"
]

dependencies = [
    "flask~=2.0",
    "requests~=2.26",

]


# tool define de donde se va a obtener la descripción del proyecto en este caso del fichero README.md
[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

# project.optional son dependencias opcionales y utilidades adicionales.

[project.optional-dependencies]
tests = [
    "time-machine==2.15.0",
    "coverage==7.6.1"
]
extended = [
    "time-machine==2.14.1"
]

# tool.setuptools define donde están los archivos de código fuente y necesario para que setuptools sepa qué paquetes debe incluir.

[tool.setuptools.packages.find]
where = ["src"]
include = ["body_analyzer"]
