#!/usr/bin/env python3
"""
Script para ejecutar migraciones en producci√≥n (Railway PostgreSQL)
Uso: python scripts/upgrade_prod_migrations.py
"""

import os
import sys

# Agregar el directorio ra√≠z al path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Configurar la URL de base de datos de producci√≥n
# Usar DATABASE_PRIVATE_URL para evitar cargos de egress en Railway
if not os.getenv('DATABASE_PRIVATE_URL') and not os.getenv('DATABASE_URL'):
    print("‚ùå ERROR: DATABASE_PRIVATE_URL o DATABASE_URL no est√° configurada")
    print("   Ejecuta: railway run python scripts/upgrade_prod_migrations.py")
    sys.exit(1)

os.environ['FLASK_APP'] = 'run.py'

# Importar despu√©s de configurar las variables de entorno
from flask_migrate import upgrade
from app import create_app, db

def run_migrations():
    """Ejecutar migraciones pendientes en producci√≥n"""
    print("üöÄ Ejecutando migraciones en Railway PostgreSQL...")
    print()
    
    try:
        # Crear app con configuraci√≥n de producci√≥n
        app = create_app('production')
        
        with app.app_context():
            print("üìä Estado antes de migrar:")
            from flask_migrate import current
            current()
            print()
            
            # Confirmar antes de ejecutar
            response = input("¬øEjecutar 'flask db upgrade' en PRODUCCI√ìN? (yes/no): ")
            
            if response.lower() != 'yes':
                print("‚ùå Operaci√≥n cancelada")
                sys.exit(0)
            
            print("\n‚öôÔ∏è  Ejecutando migraciones...")
            upgrade()
            
            print("\n‚úÖ Migraciones completadas exitosamente")
            print()
            
            print("üìä Estado despu√©s de migrar:")
            current()
            print()
            
            print("üéâ ¬°Listo! Ahora puedes:")
            print("  1. Descomentar las columnas de fotos en app/models/biometric_analysis.py")
            print("  2. git add app/models/biometric_analysis.py")
            print("  3. git commit -m 'feat: Habilitar columnas de fotos despu√©s de migraci√≥n'")
            print("  4. git push origin main")
            print()
            print("  Verifica en: https://app.coachbodyfit360.com")
            
    except Exception as e:
        print(f"\n‚ùå Error al ejecutar migraciones: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    run_migrations()
